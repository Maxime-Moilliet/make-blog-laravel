<?php

declare(strict_types=1);

namespace App\Http\Controllers\Admin;

use App\Enums\PostStatusEnum;
use App\Models\Post;
use App\Models\Seo;
use App\Requests\Blog\PostRequest;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Http\RedirectResponse;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\Storage;
use Illuminate\View\View;

class AdminBlogController extends Controller
{
    public function index(): Application|Factory|View
    {
        return view('admin.blog.index', [
            'posts_draft' => Post::where('status', PostStatusEnum::DRAFT)->orderBy('created_at', 'desc')->get(),
            'posts_published' => Post::where('status', PostStatusEnum::PUBLISHED)->orderBy('created_at', 'desc')->get(),
            'posts_archived' => Post::where('status', PostStatusEnum::ARCHIVED)->orderBy('created_at', 'desc')->get(),
        ]);
    }

    public function create(): Application|Factory|View
    {
        return view('admin.blog.create');
    }

    public function store(PostRequest $request): RedirectResponse
    {
        $seo = new Seo;
        $seo->title = $request->validated('seo_title');
        $seo->description = $request->validated('seo_description');
        $seo->keywords = $request->validated('seo_keywords');
        $seo->canonical = $request->validated('seo_canonical');

        $post = Post::create([
            'title' => $request->validated('title'),
            'slug' => $request->validated('slug'),
            'content' => $request->validated('content'),
            'status' => $request->validated('status'),
        ]);

        $post->seo()->save($seo);

        if ($request->hasFile('main_image')) {
            $mainImage = $request->validated('main_image');
            if ($mainImage != null || !$mainImage->getError()) {
                $post->update(['main_image' => $mainImage->store('images', 'public')]);
            }
        }

        return redirect()->route('admin.blog.index')->with('success', 'Post created successfully');
    }

    public function edit(Post $post): Application|Factory|View
    {
        return view('admin.blog.edit', ['post' => $post]);
    }

    public function update(PostRequest $request, Post $post): RedirectResponse
    {
        $seo = $post->seo;
        $seo->title = $request->validated('seo_title');
        $seo->description = $request->validated('seo_description');
        $seo->keywords = $request->validated('seo_keywords');
        $seo->canonical = $request->validated('seo_canonical');

        $post->update([
            'title' => $request->validated('title'),
            'slug' => $request->validated('slug'),
            'content' => $request->validated('content'),
            'status' => $request->validated('status'),
        ]);

        $post->seo()->save($seo);

        if ($request->hasFile('main_image')) {
            $mainImage = $request->validated('main_image');
            if ($mainImage != null || !$mainImage->getError()) {
                $post->update(['main_image' => $mainImage->store('images', 'public')]);
            }
        }

        return redirect()->route('admin.blog.index')->with('success', 'Post updated successfully');
    }

    public function destroy(Post $post): RedirectResponse
    {
        $post->seo()->delete();

        $post->delete();

        return redirect()->route('admin.blog.index')->with('success', 'Post deleted successfully');
    }

    public function destroyImage(Post $post): RedirectResponse
    {
        if ($post->main_image) {
            Storage::disk('public')->delete($post->main_image);
        }

        $post->update(['main_image' => null]);

        return redirect()->back()->with('success', 'Post image deleted successfully');
    }
}
