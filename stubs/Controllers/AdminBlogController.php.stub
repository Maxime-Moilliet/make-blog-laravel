<?php

declare(strict_types=1);

namespace App\Http\Controllers\Admin;

use App\Enums\PostStatusEnum;
use App\Models\Post;
use App\Requests\Blog\PostRequest;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Http\RedirectResponse;
use Illuminate\Routing\Controller;
use Illuminate\View\View;
use Cocur\Slugify\Slugify;

class AdminBlogController extends Controller
{
    public function index(): Application|Factory|View
    {
        return view('admin.blog.index', [
            'posts_draft' => Post::where('status', PostStatusEnum::DRAFT)->orderBy('created_at', 'desc')->get(),
            'posts_published' => Post::where('status', PostStatusEnum::PUBLISHED)->orderBy('created_at', 'desc')->get(),
            'posts_archived' => Post::where('status', PostStatusEnum::ARCHIVED)->orderBy('created_at', 'desc')->get(),
        ]);
    }

    public function create(): Application|Factory|View
    {
        return view('admin.blog.create');
    }

    public function store(PostRequest $request, Slugify $slugify): RedirectResponse
    {
        Post::create([
            ...$request->validated(),
            'slug' => $slugify->slugify($request->get('title')),
        ]);

        return redirect()->route('admin.blog.index')->with('success', 'Post created successfully');
    }

    public function edit(Post $post): Application|Factory|View
    {
        return view('admin.blog.edit', ['post' => $post]);
    }

    public function update(PostRequest $request, Post $post, Slugify $slugify): RedirectResponse
    {
        $post->update([
            ...$request->validated(),
            'slug' => $slugify->slugify($request->get('title')),
        ]);

        return redirect()->route('admin.blog.index')->with('success', 'Post updated successfully');
    }

    public function destroy(Post $post): RedirectResponse
    {
        $post->delete();

        return redirect()->route('admin.blog.index')->with('success', 'Post deleted successfully');
    }
}
